/// Create responsive rules based on breakpoints
/// @author Davide Marchet
/// @param {List} $properties - Key:value list, name is required ('name': 'css property', 'small': value, medium: value, [...])
/// @require react

@mixin resp($properties...) {
  $breakpointsList: ();

  @each $property in $properties {
      $brekpoints: remove($property, 'name');
      @each $brekpoint in keys($brekpoints) {
        $breakpointsList: append($breakpointsList, $brekpoint, $separator: comma);
      }
  }

  $breakpointsList: remove-duplicates($breakpointsList);

  @each $breakpoint in $breakpointsList {
    @include react(#{$breakpoint}){
      @each $property in $properties {
        @if has-key($property, 'name') {
          @if has-key($property, $breakpoint) {
            #{get($property, 'name')}: #{get($property, $breakpoint)};
          }
        }
        @else {
          @error "Property 'name' is required.";
        }
      }
    }
  }
}
