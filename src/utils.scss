/// https://hugogiraudel.com/2013/10/09/advanced-sass-list-functions-again/

@function remove-duplicates($list, $recursive: false) {  
  $result: ();  
  @each $item in $list {    
    @if not index($result, $item) {      
      @if length($item) > 1 and $recursive {        
        $result: append($result, remove-duplicates($item, $recursive));      
      } @else {        
        $result: append($result, $item);      
      }    
    }  
  }  
  @return $result;
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  
  @return $string;
}